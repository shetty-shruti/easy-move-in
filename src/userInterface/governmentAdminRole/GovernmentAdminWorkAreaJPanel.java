/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.governmentAdminRole;

import business.event.Event;
import business.organization.GovernmentAdminOrganization;
import business.project.Project;
import business.work.ConstructionWorkRequest;
import business.work.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hardik
 */
public class GovernmentAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GovernmentAdminWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private GovernmentAdminOrganization gao;

    public GovernmentAdminWorkAreaJPanel() {
        initComponents();
    }

    public GovernmentAdminWorkAreaJPanel(JPanel userProcessContainer, GovernmentAdminOrganization gao) {
        this();
        this.userProcessContainer = userProcessContainer;
        this.gao = gao;
        populateRequestTable();
        populateEventTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        createEventButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        eventTable = new javax.swing.JTable();
        handleEventButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Sender", "Building", "Status"
            }
        ));
        jScrollPane1.setViewportView(requestTable);
        if (requestTable.getColumnModel().getColumnCount() > 0) {
            requestTable.getColumnModel().getColumn(3).setHeaderValue("Status");
        }

        createEventButton.setBackground(new java.awt.Color(153, 51, 0));
        createEventButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        createEventButton.setForeground(new java.awt.Color(255, 255, 255));
        createEventButton.setText("Create Event");
        createEventButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createEventButtonMouseClicked(evt);
            }
        });
        createEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEventButtonActionPerformed(evt);
            }
        });

        eventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Event", "Approved", "Total", "Building Id"
            }
        ));
        jScrollPane2.setViewportView(eventTable);

        handleEventButton.setBackground(new java.awt.Color(153, 51, 0));
        handleEventButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        handleEventButton.setForeground(new java.awt.Color(255, 255, 255));
        handleEventButton.setText("Handle Event");
        handleEventButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                handleEventButtonMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Government Work Area");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(handleEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(108, 108, 108))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(handleEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createEventButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createEventButtonMouseClicked
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow >= 0) {
            ConstructionWorkRequest cwr = (ConstructionWorkRequest) requestTable.getValueAt(selectedRow, 0);
            if (cwr.getStatus().equals("Started")) {
                cwr.setStatus("Event added");
                cwr.getProject().setProjectStatus(Project.ProjectStatus.INITIATED);
                Event event = new Event(cwr.getProject());
                JOptionPane.showMessageDialog(null, "Event created!");
                gao.getEventList().add(event);
                populateEventTable();
                populateRequestTable();
            } else {
                JOptionPane.showMessageDialog(null, "Project status must be \"Started\" to create an event!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a project first!");
        }
    }//GEN-LAST:event_createEventButtonMouseClicked

    private void handleEventButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handleEventButtonMouseClicked
        // TODO add your handling code here:
        int selectedRow = eventTable.getSelectedRow();
        if (selectedRow >= 0) {
            Event event = (Event) eventTable.getValueAt(selectedRow, 0);
            if (event.getProject().getProjectStatus() == Project.ProjectStatus.INITIATED) {
                HandleEventJPanel hejp = new HandleEventJPanel(userProcessContainer, event);
                userProcessContainer.add(hejp);
                ((CardLayout) userProcessContainer.getLayout()).next(userProcessContainer);
            }
            else {
                JOptionPane.showMessageDialog(null, "A decision has already been made on the selected project!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a project first!");
        }

    }//GEN-LAST:event_handleEventButtonMouseClicked

    private void createEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEventButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createEventButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createEventButton;
    private javax.swing.JTable eventTable;
    private javax.swing.JButton handleEventButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables

    public void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel) requestTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : gao.getWorkQueue().getWorkQueue()) {
            ConstructionWorkRequest cwr = (ConstructionWorkRequest) request;
            Object[] row = new Object[4];
            row[0] = cwr;
            row[1] = cwr.getSender();
            row[2] = cwr.getProject().getBuilding();
            row[3] = cwr.getStatus();
            dtm.addRow(row);
        }
    }

    public void populateEventTable() {
        DefaultTableModel dtm = (DefaultTableModel) eventTable.getModel();
        dtm.setRowCount(0);
        for (Event event : gao.getEventList()) {
            Object[] row = new Object[4];
            row[0] = event;
            row[1] = event.getApprovalCount();
            row[2] = event.getAccountDirectory().getAccountDirectory().size();
            row[3] = event.getProject().getBuilding().getBuildingId();
            dtm.addRow(row);
        }
    }
}
