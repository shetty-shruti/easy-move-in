/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.constructionAdminRole;

import business.Tenant.Area;
import business.Tenant.Building;
import business.Tenant.Street;
import business.account.Account;
import business.enterprise.ConstructionEnterprise;
import business.enterprise.GovernmentEnterprise;
import business.network.Network;
import business.organization.ConstructionAdminOrganization;
import business.organization.GovernmentAdminOrganization;
import business.organization.Organization;
import business.project.Project;
import business.work.ConstructionWorkRequest;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Hardik
 */
public class CreateProjectJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateProjectJPanel
     */
    private JPanel userProcessContainer;
    private Account account;
    private ConstructionAdminOrganization constructionAdminOrganization;
    private ConstructionEnterprise constructionEnterprise;
    private Network network;

    public CreateProjectJPanel() {
        initComponents();
    }

    public CreateProjectJPanel(JPanel userProcessContainer, Account account, ConstructionAdminOrganization constructionAdminOrganization, ConstructionEnterprise constructionEnterprise, Network network) {
        this();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.constructionAdminOrganization = constructionAdminOrganization;
        this.constructionEnterprise = constructionEnterprise;
        this.network = network;
        citySelect.removeAllItems();

        for (String city : network.getFreeSpaceAvailable().keySet()) {
            citySelect.addItem(city);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        expectedEndDate = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        startDate = new javax.swing.JTextField();
        budget = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        streetNameSelect = new javax.swing.JComboBox();
        areaSelect = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        createRequestButton = new javax.swing.JButton();
        buildingSelect = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        citySelect = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();

        backButton.setBackground(new java.awt.Color(153, 51, 0));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<< Back");
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        expectedEndDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expectedEndDateActionPerformed(evt);
            }
        });

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        startDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateActionPerformed(evt);
            }
        });

        budget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                budgetActionPerformed(evt);
            }
        });

        jLabel1.setText("Budget");

        jLabel2.setText("End Date(Expected)");

        jLabel3.setText("Name :");

        jLabel4.setText("Start Date :");

        streetNameSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        streetNameSelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                streetNameSelectItemStateChanged(evt);
            }
        });

        areaSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        areaSelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                areaSelectItemStateChanged(evt);
            }
        });
        areaSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaSelectActionPerformed(evt);
            }
        });

        jLabel5.setText("Street Name:");

        jLabel6.setText("Area :");

        createRequestButton.setBackground(new java.awt.Color(153, 51, 0));
        createRequestButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        createRequestButton.setForeground(new java.awt.Color(255, 255, 255));
        createRequestButton.setText("Create Request");
        createRequestButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createRequestButtonMouseClicked(evt);
            }
        });
        createRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRequestButtonActionPerformed(evt);
            }
        });

        buildingSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        buildingSelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                buildingSelectItemStateChanged(evt);
            }
        });

        jLabel7.setText("Building :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Create Project");

        citySelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        citySelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                citySelectItemStateChanged(evt);
            }
        });
        citySelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citySelectActionPerformed(evt);
            }
        });

        jLabel9.setText("City");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(81, 81, 81)
                                .addComponent(name))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(58, 58, 58)
                                .addComponent(startDate))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(budget)
                                    .addComponent(expectedEndDate))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 196, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(createRequestButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(streetNameSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(areaSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buildingSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(citySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(203, 203, 203))
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(expectedEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(budget, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(citySelect, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(areaSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(streetNameSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buildingSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createRequestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(147, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void expectedEndDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expectedEndDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expectedEndDateActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void startDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDateActionPerformed

    private void budgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_budgetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_budgetActionPerformed

    private void createRequestButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createRequestButtonMouseClicked
        // TODO add your handling code here:
        try {
            String projectName = name.getText();
            String projection = budget.getText();
            String start = this.startDate.getText();
            String end = expectedEndDate.getText();
            if (!(projectName.equals("") || projection.equals("") || startDate.equals("") || expectedEndDate.equals(""))) {
                if (projection.matches("^[0-9]+$")) {
                    Project project = new Project();
                    project.setName(projectName);
                    project.setBudget(Long.parseLong(projection));
                    project.setProjectStatus(Project.ProjectStatus.REQUESTED);
                    project.setEnterprise(constructionEnterprise);
                    SimpleDateFormat sdf = new SimpleDateFormat("mm/dd/yyyy");
                    project.setStartDate(sdf.parse(start));
                    project.setExpectedEndDate(sdf.parse(end));
                    Building building = (Building) buildingSelect.getSelectedItem();
                    building.setCanBeDemolished(false);
                    building.setWorkInProgress(true);
                    project.setBuilding(building);
                    constructionAdminOrganization.getProjects().add(project);
                    ConstructionWorkRequest cwr = getConstructionWorkRequest(project);
                    GovernmentEnterprise governmentEnterprise = (GovernmentEnterprise) network.getEnterpriseDirectory().getEnterprise(GovernmentEnterprise.class);
                    for (Organization org : governmentEnterprise.getOrganizationDirectory().getOrganizationDirectory()) {
                        if (org instanceof GovernmentAdminOrganization) {
                            org.getWorkQueue().getWorkQueue().add(cwr);
                        }
                    }
                    JOptionPane.showMessageDialog(null, "Project Request created and sent to the Government!!");
                } else {
                    throw new Exception("Budget must be a number");
                }
            } else {
                throw new Exception("Fill all fields");
            }
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Enter the correct format of dates(mm/dd/yyyy)");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_createRequestButtonMouseClicked

    private void streetNameSelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_streetNameSelectItemStateChanged
        // TODO add your handling code here:
        Street street = (Street) streetNameSelect.getSelectedItem();
        if (street != null) {
            buildingSelect.removeAllItems();
            for (Building building : street.getBuildingList()) {
                if (building.isCanBeDemolished()) {
                    buildingSelect.addItem(building);
                }
            }
        }
    }//GEN-LAST:event_streetNameSelectItemStateChanged

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        ConstructionAdminWorkAreaJPanel cawjp = (ConstructionAdminWorkAreaJPanel) userProcessContainer.getComponent(userProcessContainer.getComponentCount() - 1);
        cawjp.populateProjects();
        ((CardLayout) userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backButtonMouseClicked

    private void areaSelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_areaSelectItemStateChanged
        // TODO add your handling code here:
        Area area = (Area) areaSelect.getSelectedItem();
        if (area != null) {
            streetNameSelect.removeAllItems();
            for (Street street : area.getStreetList()) {
                streetNameSelect.addItem(street);
            }
        }
    }//GEN-LAST:event_areaSelectItemStateChanged

    private void createRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRequestButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createRequestButtonActionPerformed

    private void areaSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_areaSelectActionPerformed

    private void buildingSelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_buildingSelectItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_buildingSelectItemStateChanged

    private void citySelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_citySelectItemStateChanged
        // TODO add your handling code here:

        if (citySelect.getSelectedItem() != null) {
            String city = (String) citySelect.getSelectedItem();
            areaSelect.removeAllItems();
            List<Area> newareaList;
            for (Map.Entry<String, List<Area>> entry : network.getFreeSpaceAvailable().entrySet()) {
                String key = entry.getKey();
                if (city.equalsIgnoreCase(key)) {
                    newareaList = entry.getValue();
                    for (Area area : newareaList) {
                        areaSelect.addItem(area);
                    }
                }
            }
        }
    }//GEN-LAST:event_citySelectItemStateChanged

    private void citySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_citySelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_citySelectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox areaSelect;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField budget;
    private javax.swing.JComboBox buildingSelect;
    private javax.swing.JComboBox citySelect;
    private javax.swing.JButton createRequestButton;
    private javax.swing.JTextField expectedEndDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField name;
    private javax.swing.JTextField startDate;
    private javax.swing.JComboBox streetNameSelect;
    // End of variables declaration//GEN-END:variables

    private ConstructionWorkRequest getConstructionWorkRequest(Project project) {
        ConstructionWorkRequest cwr = new ConstructionWorkRequest();
        cwr.setProject(project);
        cwr.setSender(account);
        cwr.setStatus("Started");
        return cwr;
    }
}
